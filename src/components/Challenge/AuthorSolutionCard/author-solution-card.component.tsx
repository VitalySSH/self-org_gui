import { useState } from 'react';
import { Card } from 'antd';
import {
  UserOutlined,
  UpOutlined,
  DownOutlined,
  FileTextOutlined,
  ClockCircleOutlined,
} from '@ant-design/icons';
import { SolutionModel, SolutionVersionModel } from 'src/models';
import './author-solution-card.component.scss';
import { AdvancedEditor } from 'src/components';

interface AuthorSolutionCardProps {
  authorSolution: {
    solution: SolutionModel;
    currentVersion: SolutionVersionModel;
  };
  authorName: string;
}

export function AuthorSolutionCard({
  authorSolution,
  authorName,
}: AuthorSolutionCardProps) {
  const [collapsed, setCollapsed] = useState(false);

  const formatDate = (date: Date | string | undefined) => {
    if (!date) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const d = typeof date === 'string' ? new Date(date) : date;
    return d.toLocaleString('ru-RU', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const getStatusInfo = (status: string) => {
    switch (status) {
      case 'draft':
        return { label: '–ß–µ—Ä–Ω–æ–≤–∏–∫', class: 'draft' };
      case 'ready_for_review':
        return { label: '–ì–æ—Ç–æ–≤–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', class: 'ready-for-review' };
      case 'completed':
        return { label: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ', class: 'completed' };
      default:
        return { label: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', class: 'draft' };
    }
  };

  const statusInfo = getStatusInfo(authorSolution.solution.status);

  return (
    <Card className="challenge-card author-solution-card">
      <div className="card-header">
        <div className="card-title">
          <div className="card-icon">
            <UserOutlined />
          </div>
          –†–µ—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
        </div>

        <div className="card-actions">
          <div className={`status-badge ${statusInfo.class}`}>
            {statusInfo.label}
          </div>

          <button
            className={`collapse-button ${collapsed ? 'collapsed' : ''}`}
            onClick={() => setCollapsed(!collapsed)}
          >
            {collapsed ? <DownOutlined /> : <UpOutlined />}
          </button>
        </div>
      </div>

      <div className={`card-content ${collapsed ? 'collapsed' : ''}`}>
        {/* –ú–µ—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—à–µ–Ω–∏–∏ */}
        <div className="solution-meta">
          <div className="meta-item">
            <UserOutlined className="meta-icon" />
            <span>–ê–≤—Ç–æ—Ä: {authorName}</span>
          </div>

          <div className="meta-item">
            <ClockCircleOutlined className="meta-icon" />
            <span>
              –°–æ–∑–¥–∞–Ω–æ: {formatDate(authorSolution.solution.created_at)}
            </span>
          </div>

          {authorSolution.currentVersion.created_at && (
            <div className="meta-item">
              <FileTextOutlined className="meta-icon" />
              <span>
                –í–µ—Ä—Å–∏—è {authorSolution.currentVersion.version_number} –æ—Ç{' '}
                {formatDate(authorSolution.currentVersion.created_at)}
              </span>
            </div>
          )}
        </div>

        {/* –¢–µ–∫—Å—Ç —Ä–µ—à–µ–Ω–∏—è */}
        <div className="content-block">
          <div className="content-label">
            <FileTextOutlined />
            –¢–µ–∫—Å—Ç —Ä–µ—à–µ–Ω–∏—è
          </div>
          <AdvancedEditor
            value={
              authorSolution.currentVersion.content ||
              '–†–µ—à–µ–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ'
            }
            readonly={true}
          />
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
        {authorSolution.currentVersion.change_description && (
          <div className="content-block">
            <div className="content-label">
              <ClockCircleOutlined />
              –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            </div>
            <div className="content-text readonly change-description">
              {authorSolution.currentVersion.change_description}
            </div>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
        <div className="author-solution-note">
          <p>
            üí° –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –∑–∞–¥–∞—á–∏. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –æ—Å–Ω–æ–≤—É
            –¥–ª—è —Å–≤–æ–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ –∏–∑—É—á–∏—Ç—å –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã.
          </p>
        </div>
      </div>
    </Card>
  );
}
